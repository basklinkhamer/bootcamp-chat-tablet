function onAppInit(e,t,n,o,r){o.connect(),t.log("Your app is online!","Rejoice!"),e.$on("resetApp",o.reset),r.getTitle().then(function(e){n.document.title=e})}function ngEnter(){function e(e,t,n){t.bind("keydown keypress",function(t){13===t.which&&(e.$apply(function(){e.$eval(n.ngEnter)}),t.preventDefault())})}var t={link:e,restrict:"A"};return t}function scrollDown(e){function t(t,n){t.$watchCollection("scrolldown",function(t){t&&e(function(){n[0].scrollTop=n[0].scrollHeight},0)})}var n={scope:{scrolldown:"="},link:t};return n}function chatAppController(e,t,n,o,r,s,a,i){function c(t,n){e.log("Initializing Chatrooms"),d.rooms=n.rooms,a.getLoginData().then(function(e){d.self=e,m(e)})["catch"](function(t){e.log("settings Error",t)})}function l(e,t){t.hash=r.createHash(t.email),d.messages.push(t)}function u(e,t){t.type="service",t.content="has joined",d.messages.push(t)}function g(e,t){t.type="service",t.content="has left",d.messages.push(t)}function m(e){e.defaultRoom?d.currentRoom=e.defaultRoom:d.currentRoom=d.rooms[0],s.getMessages(d.currentRoom).then(function(e){d.messages=e}),t.$broadcast("socket:userLogin",e)}function p(e){var n={username:d.self.username,email:d.self.email,oldRoom:d.currentRoom,newRoom:e};d.currentRoom=e,d.messages=[],s.getMessages(d.currentRoom).then(function(e){d.messages=e,t.$broadcast("socket:switchRoom",n)})}var d=this;d.rooms=[],d.currentRoom="",d.messages=[],d.self={},d.switchRoom=p,n.$on("socket:init",c),n.$on("socket:addMessage",l),n.$on("socket:userJoin",u),n.$on("socket:userLeft",g)}function chatOptionsController(e){function t(){e.getTitle().then(function(e){n.appTitle=e})}var n=this;n.$onInit=t}function chatRoomController(e,t){function n(){e("left").toggle()}var o=this;o.toggleSideNav=n}function chatMessageBarController(e,t){function n(){t.debug("You said:",o.message);var n={username:o.self.username,email:o.self.email,content:o.message,room:o.currentRoom};e.$broadcast("socket:message",n),o.message=""}var o=this;o.message="",o.sendMessage=n}function settingsBarController(e,t,n,o,r){function s(){r.getAllSettings().then(function(t){l.settings=t,e.log("Generating Settings Dialogs");var n=o.prompt().title("E-mail").textContent("Please provide your fellow bootcampers with your email:").placeholder("Email Address").ariaLabel("Email Address").initialValue(l.settings.email).ok("Save").cancel("Cancel").openFrom("#emailToggle").closeTo("#emailToggle"),r=o.prompt().title("Username").textContent("Please provide your fellow bootcampers with your username:").placeholder("Username").ariaLabel("Username").initialValue(l.settings.username).ok("Save").cancel("Cancel").openFrom("#userToggle").closeTo("#userToggle"),s=o.prompt().title("Server Address").textContent("Please provide a server address to connect to:").placeholder("http://").ariaLabel("Server Address").initialValue(l.settings.serverAddress).ok("Save").cancel("Cancel").openFrom("#serverToggle").closeTo("#serverToggle"),a=o.alert().title("Welcome to "+l.title).textContent("This app was lovingly created by Bas Klinkhamer and expanded by you, "+l.settings.username+"! You're a rockstar!").ariaLabel("App Information").ok("Rock on!");l.settingsDialogs={email:{id:"emailToggle",label:"Email",icon:"ion-android-mail",dialog:n},username:{id:"userToggle",label:"Username",icon:"ion-android-person",dialog:r},serverAddress:{id:"serverToggle",label:"Server Settings",icon:"ion-android-wifi",dialog:s},info:{id:"infoToggle",label:"App Info",icon:"ion-happy",dialog:a}}})}function a(e,t){o.show(e).then(function(e){"info"!==t&&i(e,t)},function(){})}function i(t,o){l.settings[o]=t,e.log("Updating settings"),r.saveSettings(l.settings).then(function(e){n.$broadcast("resetApp",null)})}function c(){l.showButtons!==!0?l.showButtons=!0:l.showButtons=!1}var l=this;l.showPrompt=a,l.toggleSettingsButtons=c,l.$onInit=s,t.$on("resetApp",s)}function socketService(e,t,n,o){function r(){var r=t.defer(),s=null;return e.$on("socket:message",function(e,t){s.emit("message",t)}),e.$on("socket:userLogin",function(e,t){s.emit("userLogin",t)}),e.$on("socket:switchRoom",function(e,t){s.emit("switchRoom",t)}),e.$on("socket:disconnect",function(e,t){s.disconnect(!0)}),o.getAllSettings().then(function(e){var t=io.connect(e.serverAddress);s=n({ioSocket:t}),s.forward(["init","addMessage","userJoin","userLeft"]),r.resolve(s)}),r.promise}function s(){var n=t.defer();return e.$broadcast("socket:disconnect",null),a.connect().then(function(e){n.resolve(e)}),n.promise}var a={connect:r,reset:s};return a}function messagesService(e,t,n,o){function r(r){var s=e.defer();return o.getAllSettings().then(function(e){var o=e.serverAddress+"/msg?room="+r;t.get(o).then(function(e){for(var t=0;t<e.data.length;t++)e.data[t].hash=n.createHash(e.data[t].email),e.data[t].time=moment(e.data[t].created).calendar();s.resolve(e.data)})}),s.promise}var s={getMessages:r};return s}function settingsService(e,t){function n(){var t=e.defer();return localforage.getItem(i).then(function(e){null!==e?t.resolve(e):a().then(function(e){n().then(function(e){t.resolve(e)})})})["catch"](function(e){t.reject(e)}),t.promise}function o(t){var n=e.defer();return localforage.setItem(i,t).then(function(){n.resolve(!0)})["catch"](function(e){n.reject(e)}),n.promise}function r(){var t=e.defer();return n().then(function(e){null!==e?(loginData=s(e),t.resolve(loginData)):a().then(function(e){n().then(function(e){loginData=s(e),t.resolve(loginData)})})})["catch"](function(e){t.reject(e)}),t.promise}function s(e){var t={username:e.username,email:e.email,defaultRoom:e.defaultRoom};return t}function a(){var n=e.defer(),r=t.getDefaults();return o(r).then(function(e){e?n.resolve(e):n.reject(!1)})["catch"](function(e){n.reject(e)}),n.promise}var i="bootcamp-chat-app-settings",c={getAllSettings:n,saveSettings:o,getLoginData:r,resetData:a};return c}function backendCommService(e,t){function n(){var t=e.defer();return t.resolve(r("title")),t.promise}function o(){var t=e.defer();return t.resolve(r("defaults")),t.promise}function r(n){var o=e.defer();return t.get("app-settings.json").then(function(e){console.log(e),o.resolve(e.data[n])}),o.promise}function s(e){return null}var a={getTitle:n,getDefaults:o,notification:s};return a}angular.module("app",["ngMaterial","ngAnimate","ngMd5","btford.socket-io"]).run(onAppInit),onAppInit.$inject=["$rootScope","$log","$window","Socket","Backend"],angular.module("app").directive("ngEnter",ngEnter),ngEnter.$inject=[],angular.module("app").directive("scrolldown",scrollDown),scrollDown.$inject=["$timeout"],angular.module("app").component("chatApp",{controller:chatAppController,controllerAs:"vm",templateUrl:"components/chat-app/chat-app.html",bindings:{}}),chatAppController.$inject=["$log","$rootScope","$scope","$http","md5","Messages","Settings","Backend"],angular.module("app").component("chatOptions",{controller:chatOptionsController,controllerAs:"vm",templateUrl:"components/chat-options/chat-options.html",bindings:{rooms:"<",currentRoom:"<",update:"&"}}),chatOptionsController.$inject=["Backend"],angular.module("app").component("chatRoom",{controller:chatRoomController,controllerAs:"vm",templateUrl:"components/chat-room/chat-room.html",bindings:{currentRoom:"<",messages:"<",self:"<"}}),chatRoomController.$inject=["$mdSidenav","Settings"],angular.module("app").component("chatMessageBar",{controller:chatMessageBarController,controllerAs:"vm",templateUrl:"components/chat-message-bar/chat-message-bar.html",bindings:{currentRoom:"<",self:"<"}}),chatMessageBarController.$inject=["$rootScope","$log"],angular.module("app").component("settingsBar",{controller:settingsBarController,controllerAs:"vm",templateUrl:"components/settings-bar/settings-bar.html",bindings:{showButtons:"<",title:"<"}}),settingsBarController.$inject=["$log","$scope","$rootScope","$mdDialog","Settings"],angular.module("app").service("Socket",socketService),socketService.$inject=["$rootScope","$q","socketFactory","Settings"],angular.module("app").service("Messages",messagesService),messagesService.$inject=["$q","$http","md5","Settings"],angular.module("app").service("Settings",settingsService),settingsService.$inject=["$q","Backend"],angular.module("app").service("Backend",backendCommService),backendCommService.$inject=["$q","$http"];